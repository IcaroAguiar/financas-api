name: Deploy Backend API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Backend API
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: financas_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup test environment
      run: |
        cp .env.example .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/financas_test" >> .env
        echo "JWT_SECRET=test-secret-key" >> .env
        echo "NODE_ENV=test" >> .env
    
    - name: Generate Prisma Client
      run: npx prisma generate
    
    - name: Setup database schema
      run: |
        # Use db push for test environment to avoid migration conflicts
        npx prisma db push --force-reset
    
    - name: Run tests
      run: npm test
      if: always()
    
    - name: Check API health
      run: |
        npm start &
        sleep 10
        curl -f http://localhost:3000/api/health || exit 1
      timeout-minutes: 2

  deploy:
    name: Deploy to Render
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        wait-for-success: true

    - name: Notify Success
      if: success()
      run: |
        echo "✅ Backend deployment successful!"
        echo "API URL: https://ascend-api-qezc.onrender.com"
    
    - name: Notify Failure
      if: failure()
      run: |
        echo "❌ Backend deployment failed!"
        exit 1