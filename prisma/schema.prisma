generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  categories   Category[]
  transactions Transaction[]
}

model Category {
  id           String        @id @default(uuid())
  name         String
  color        String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@unique([userId, name])
}

model Transaction {
  id          String          @id @default(uuid())
  description String
  amount      Float
  date        DateTime
  type        TransactionType
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  userId      String
  categoryId  String?
  category    Category?       @relation(fields: [categoryId], references: [id])
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Debtor {
  id        String   @id @default(uuid())
  name      String
  email     String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  debts     Debt[]
}

model Debt {
  id          String     @id @default(uuid())
  description String
  totalAmount Float
  dueDate     DateTime
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  debtorId    String
  status      DebtStatus @default(PENDENTE)
  debtor      Debtor     @relation(fields: [debtorId], references: [id], onDelete: Cascade)
  payments    Payment[]
}

model Payment {
  id          String   @id @default(uuid())
  amount      Float
  paymentDate DateTime @default(now())
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  debtId      String
  debt        Debt     @relation(fields: [debtId], references: [id], onDelete: Cascade)
}

enum TransactionType {
  RECEITA
  DESPESA
}

enum DebtStatus {
  PENDENTE
  PAGA
}
